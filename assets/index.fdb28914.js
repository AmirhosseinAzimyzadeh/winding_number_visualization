var I=Object.defineProperty;var D=(s,t,e)=>t in s?I(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var a=(s,t,e)=>(D(s,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const h of o.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&n(h)}).observe(document,{childList:!0,subtree:!0});function e(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=e(i);fetch(i.href,o)}})();class M{constructor(){a(this,"points");this.points=[]}addPoint(t){this.points.push(t)}draw(t,e){for(let n=0;n<this.points.length-1;n++){const i=this.points[n],o=this.points[n+1];t.strokeStyle="white",t.lineWidth=1,t.beginPath(),t.moveTo(i.x*e.width,i.y*e.height),t.lineTo(o.x*e.width,o.y*e.height),t.stroke()}}}class c{constructor(t,e){a(this,"x");a(this,"y");this.x=t,this.y=e}static vector(t,e){return new c(e.x-t.x,e.y-t.y)}static dotProduct(t,e){return t.x*e.x+t.y*e.y}static calculateAngle(t,e){let n=c.dotProduct(t,e)/(t.magnitude()*e.magnitude());return n>=1&&(n=n-n%1),n<=-1&&(n=n-n%Math.PI),Math.acos(n)}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}unitVector(){const t=this.magnitude();return new c(this.x/t,this.y/t)}}class S{constructor(t,e){a(this,"canvas");a(this,"context");a(this,"paths",[]);a(this,"targetPoint");a(this,"currentPath",null);a(this,"onChange");const n=document.getElementById(t);if(!n)throw new Error(`Canvas with id ${t} not found`);const i=n.getContext("2d",{willReadFrequently:!0});if(!i)throw new Error(`Context for canvas with id ${t} not found`);this.canvas=n,this.context=i,this.targetPoint=new c(.5,.5),this.onChange=e,this.canvas.addEventListener("mousedown",this.onStartDraw.bind(this)),this.canvas.addEventListener("mouseup",this.onEndDraw.bind(this)),this.canvas.addEventListener("mouseleave",this.onEndDraw.bind(this)),this.canvas.addEventListener("mousemove",this.onDraw.bind(this))}onStartDraw(t){document.querySelector("#loading").innerText="[ calculating... ]",this.paths=[],this.currentPath=new M,this.currentPath.addPoint(this.getRelativeLocation(t))}onEndDraw(t){!this.currentPath||(this.currentPath.addPoint(this.getRelativeLocation(t)),this.paths.push(this.currentPath),this.currentPath=null,this.onChange(this.context),this.paths.forEach(e=>e.draw(this.context,this.canvas)),document.querySelector("#loading").innerText="")}onDraw(t){if(!this.currentPath)return;const e=this.getRelativeLocation(t);this.currentPath.addPoint(e)}getRelativeLocation(t){const e=this.canvas.getBoundingClientRect(),n=(t.clientX-e.left)/e.width,i=(t.clientY-e.top)/e.height;return new c(n,i)}}document.querySelector("#app").innerHTML=`
  <div style="position: relative;">
    <canvas
      id="canvas"
      width="440"
      height="440"
      style="
        background-color: #000000;
        position: relative;
      "
    >
    </canvas>

    <div style="margin: 10px; color: white; font-family: Arial">
      draw a line inside the canvas
      <span style="font-size: 12px; opacity: 0.7" id="loading"></span>
    </div>
  </div>
`;function q(s,t,e){const n=t*(e*4)+s*4;return[n,n+1,n+2,n+3]}let r=null;function R(s){if(!r)return;const t=s.getImageData(0,0,r.canvas.width,r.canvas.height);for(let e=0;e<r.canvas.width;e++){for(let n=0;n<r.canvas.height;n++){const i=e/r.canvas.width,o=n/r.canvas.height,h=q(e,n,r.canvas.width),[y,w,m,P]=h,x=new c(i,o);let d=0,u=null,g=null,v=!0;for(const E of r.paths)for(const b of E.points){const l=c.vector(x,b);if(u&&g){const p=c.calculateAngle(u,l),C=c.calculateAngle(g,l);Math.abs(C-Math.PI)<=1e-5&&(v=!v),d=v?d+p:d-p,u=l}else u=l,g||(g=l)}const L=d/(2*Math.PI);let f=Math.abs(L)*185;t.data[y]=f>0?f:0,t.data[w]=0,t.data[m]=255-f,t.data[P]=f}s.putImageData(t,0,0)}}r=new S("canvas",R);
